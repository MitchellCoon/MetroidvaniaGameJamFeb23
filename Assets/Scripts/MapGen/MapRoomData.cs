using UnityEngine;

namespace MapGen
{

    // These SOs are generated by MapGenerator and should not be created manually.
    public class MapRoomData : ScriptableObject
    {
        [SerializeField] public string roomGuid;
        [SerializeField] public string roomName;
        [SerializeField] MapRoomLayer _backgroundLayer;
        [SerializeField] MapRoomLayer _borderLayer;
        [SerializeField] MapRoomLayer _tileLayer;
        [Space]
        [Space]
        [SerializeField] bool isVisited;

        public string RoomGuid => roomGuid;
        public bool IsVisited => isVisited;

        public MapRoomLayer backgroundLayer => _backgroundLayer;
        public MapRoomLayer borderLayer => _borderLayer;
        public MapRoomLayer tileLayer => _tileLayer;

        public event System.Action<string> OnRoomVisited;

        public void Init()
        {
            isVisited = false;
        }

        public void FlagRoomVisited()
        {
            isVisited = true;
            OnRoomVisited?.Invoke(roomGuid);
        }

        public void SetBackgroundLayer(MapRoomLayer incoming)
        {
            _backgroundLayer.Config(incoming);
        }

        public void SetBorderLayer(MapRoomLayer incoming)
        {
            _borderLayer.Config(incoming);
        }

        public void SetTileLayer(MapRoomLayer incoming)
        {
            _tileLayer.Config(incoming);
        }

        public void SetBackgroundSprite(Sprite sprite)
        {
            _backgroundLayer.sprite = sprite;
        }

        public void SetBorderSprite(Sprite sprite)
        {
            _borderLayer.sprite = sprite;
        }

        public void SetTileSprite(Sprite sprite)
        {
            _tileLayer.sprite = sprite;
        }

        public GameObject CreateGameObject()
        {
            GameObject backgroundObj = _backgroundLayer.CreateGameObject();
            GameObject borderObj = _borderLayer.CreateGameObject();
            GameObject tileObj = _tileLayer.CreateGameObject();
            GameObject roomObj = new GameObject($"MapRoom_{roomName}");
            WorldMapRoom worldMapRoom = roomObj.AddComponent<WorldMapRoom>();
            worldMapRoom.SetRoomGuid(roomGuid);
            roomObj.layer = Layer.Parse(MapGenerator.MAP_LAYER);
            roomObj.transform.position = Vector2.zero;
            UpdateChild(backgroundObj, roomObj);
            UpdateChild(borderObj, roomObj);
            UpdateChild(tileObj, roomObj);
            return roomObj;
        }

        void UpdateChild(GameObject childObj, GameObject parentObj)
        {
            if (childObj == null) return;
            childObj.layer = Layer.Parse(MapGenerator.MAP_LAYER);
            childObj.transform.SetParent(parentObj.transform);
        }

        public override string ToString()
        {
            return $"{roomName}-{roomGuid}\n{_borderLayer}\n{_tileLayer}\n{_backgroundLayer}";
        }
    }
}
